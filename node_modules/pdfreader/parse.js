var LOG = require("./lib/LOG.js").toggle(false);
var PdfReader = require("./index.js").PdfReader;
const fs = require('fs')
var regexMail = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
var mails = [];
var currentPage = 0;

function printRawItems(filename, callback) {
  new PdfReader().parseFileItems(filename, function (err, item) {
    if (err) callback(err);
    else if (!item) callback();
    else if (item.file) console.log("file =", item.file.path);
    else if (item.page) currentPage = item.page
    else if (item.x) {
      if(regexMail.test(String(item.text).toLowerCase())) {
        mails.push([currentPage, item.text]);
      }
    }
    else console.warn(item);
  });
}

var filename = process.argv[2];
if (!filename) {
  console.error("please provide the name of a PDF file");
} else {
  console.warn("printing raw items from file:", filename, "...");
  printRawItems(filename, function () {
    console.warn("done.");
    let csvContent = "";

    mails.forEach(function(rowArray) {
        let row = rowArray.join(",");
        csvContent += row + "\r\n";
    });
      
    // Write data in 'Output.txt' . 
    fs.writeFile('output.txt', csvContent, (err) => { 
        console.log('Writting file')
        // In case of a error throw err. 
        if (err) throw err; 
    }) 
  });
}